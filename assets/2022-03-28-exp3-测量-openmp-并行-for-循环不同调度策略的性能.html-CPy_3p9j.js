import{_ as t,o as e,c as r,e as o}from"./app-CoV9NwP4.js";const n={},a=o('<table><thead><tr><th>调度策略</th><th>static</th><th>dynamic</th><th>guided</th></tr></thead><tbody><tr><td>Sort uniform parts</td><td>70.4433 ms</td><td>94.0649 ms</td><td>69.919 ms</td></tr><tr><td>Sort random parts</td><td>1436.51 ms</td><td>1376.06 ms</td><td>1443.13 ms</td></tr></tbody></table><h2 id="sort-uniform-parts" tabindex="-1"><a class="header-anchor" href="#sort-uniform-parts"><span>Sort Uniform Parts</span></a></h2><p>由于每个 part 的长度相同, 每次迭代的开销基本均衡. <code>nUniformParts = 100000</code>, 总迭代次数较 <strong>多</strong>.</p><p>因此, 分配过程耗时较长的 <code>dynamic</code> 调度开销显著高于 <code>static</code> 和 <code>guided</code>.</p><p>考虑到每次迭代的开销波动, 使用 <code>static</code> 调度的负载并不完全均衡. 而使用 <code>guided</code> 调度能够通过 <strong>引入较小的开销优化由于波动产生的负载不均</strong>.</p><h2 id="sort-random-parts" tabindex="-1"><a class="header-anchor" href="#sort-random-parts"><span>Sort Random Parts</span></a></h2><p>每个 part 的长度较为不均, 每次迭代的开销极不均衡. <code>nRandomParts = 100</code>, 总迭代次数较 <strong>少</strong>.</p><p>因此, 使用 <code>static</code> 和 <code>guided</code> 将导致负载的极不均衡. 而 <code>dynamic</code> 虽然引入了分配开销, 但总迭代次数少, <strong>负载均衡带来的收益</strong> 能够弥补 <strong>分配</strong> 带来的额外开销.</p>',8),d=[a];function i(s,p){return e(),r("div",null,d)}const m=t(n,[["render",i],["__file","2022-03-28-exp3-测量-openmp-并行-for-循环不同调度策略的性能.html.vue"]]),l=JSON.parse('{"path":"/2022/course-work/hpc/2022-03-28-exp3-%E6%B5%8B%E9%87%8F-openmp-%E5%B9%B6%E8%A1%8C-for-%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%90%8C%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E7%9A%84%E6%80%A7%E8%83%BD.html","title":"exp3: 测量 OpenMP 并行 for 循环不同调度策略的性能","lang":"en-US","frontmatter":{"date":"2022-03-28T00:00:00.000Z","isOriginal":true,"category":["Course Work"],"tag":["Introduction to High Performance Computing","OMP"],"title":"exp3: 测量 OpenMP 并行 for 循环不同调度策略的性能","description":"Sort Uniform Parts 由于每个 part 的长度相同, 每次迭代的开销基本均衡. nUniformParts = 100000, 总迭代次数较 多. 因此, 分配过程耗时较长的 dynamic 调度开销显著高于 static 和 guided. 考虑到每次迭代的开销波动, 使用 static 调度的负载并不完全均衡. 而使用 guide...","head":[["meta",{"property":"og:url","content":"https://blog.liblaf.me/2022/course-work/hpc/2022-03-28-exp3-%E6%B5%8B%E9%87%8F-openmp-%E5%B9%B6%E8%A1%8C-for-%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%90%8C%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E7%9A%84%E6%80%A7%E8%83%BD.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"exp3: 测量 OpenMP 并行 for 循环不同调度策略的性能"}],["meta",{"property":"og:description","content":"Sort Uniform Parts 由于每个 part 的长度相同, 每次迭代的开销基本均衡. nUniformParts = 100000, 总迭代次数较 多. 因此, 分配过程耗时较长的 dynamic 调度开销显著高于 static 和 guided. 考虑到每次迭代的开销波动, 使用 static 调度的负载并不完全均衡. 而使用 guide..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-03T09:57:39.000Z"}],["meta",{"property":"article:author","content":"liblaf"}],["meta",{"property":"article:tag","content":"Introduction to High Performance Computing"}],["meta",{"property":"article:tag","content":"OMP"}],["meta",{"property":"article:published_time","content":"2022-03-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-03T09:57:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"exp3: 测量 OpenMP 并行 for 循环不同调度策略的性能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-03T09:57:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liblaf\\",\\"url\\":\\"https://liblaf.me\\",\\"email\\":\\"i@liblaf.me\\"}]}"]]},"headers":[{"level":2,"title":"Sort Uniform Parts","slug":"sort-uniform-parts","link":"#sort-uniform-parts","children":[]},{"level":2,"title":"Sort Random Parts","slug":"sort-random-parts","link":"#sort-random-parts","children":[]}],"git":{"createdTime":1677217008000,"updatedTime":1709459859000,"contributors":[{"name":"liblaf","email":"30631553+liblaf@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"2022/course-work/hpc/2022-03-28-exp3-测量-openmp-并行-for-循环不同调度策略的性能.md","localizedDate":"March 28, 2022","excerpt":"<table>\\n<thead>\\n<tr>\\n<th>调度策略</th>\\n<th>static</th>\\n<th>dynamic</th>\\n<th>guided</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Sort uniform parts</td>\\n<td>70.4433 ms</td>\\n<td>94.0649 ms</td>\\n<td>69.919 ms</td>\\n</tr>\\n<tr>\\n<td>Sort random parts</td>\\n<td>1436.51 ms</td>\\n<td>1376.06 ms</td>\\n<td>1443.13 ms</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{m as comp,l as data};
